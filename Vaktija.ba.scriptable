{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "deep-gray",
    "glyph" : "kaaba"
  },
  "name" : "Vaktija.ba",
  "script" : "\/*\n * Vaktija Widget for iPhone v1.0\n * \n * Script that fetches prayer times from vaktija.ba API and displays them in a widget.\n * Designed for a horizontal layout with the original Vaktija.ba colors and feel.\n * \n * Made by MuxBH28 - 04.03.2025. (Ramadan)\n * \n *\/\n\nconst API_URL = \"https:\/\/api.vaktija.ba\/vaktija\/v1\/\";\nconst CITY = \"77\";\nconst FILE_PATH = \"vaktija.json\";\nconst fm = FileManager.iCloud();\nconst file = fm.joinPath(fm.documentsDirectory(), FILE_PATH);\n\nasync function fetchData() {\n    let req = new Request(API_URL + CITY);\n    let data = await req.loadJSON();\n    let now = new Date();\n    let fetchTime = now.toLocaleTimeString(\"bs-BA\", { hour: \"2-digit\", minute: \"2-digit\" });\n    let fetchDate = now.toISOString().split(\"T\")[0];\n\n    fm.writeString(file, JSON.stringify({ data, fetchDate, fetchTime }));\n    return { data, fetchTime };\n}\n\nfunction loadStoredData() {\n    if (fm.fileExists(file)) {\n        let stored = JSON.parse(fm.readString(file));\n        let today = new Date().toISOString().split(\"T\")[0];\n        if (stored.fetchDate === today) return stored;\n    }\n    return null;\n}\n\nasync function getVaktija() {\n    let storedData = loadStoredData();\n    return storedData ? storedData : await fetchData();\n}\n\nfunction getNextVakat(vakatTimes, vakatNames) {\n    let now = new Date();\n    for (let i = 0; i < vakatTimes.length; i++) {\n        let [hours, minutes] = vakatTimes[i].split(\":\").map(Number);\n        let vakatTime = new Date();\n        vakatTime.setHours(hours, minutes, 0, 0);\n        if (now < vakatTime) {\n            let diff = Math.floor((vakatTime - now) \/ 1000);\n            let h = Math.floor(diff \/ 3600);\n            let m = Math.floor((diff % 3600) \/ 60);\n            return { vakatName: vakatNames[i], countdown: `${h}h ${m}m` };\n        }\n    }\n    return { vakatName: vakatNames[0], countdown: \"0h 0m\" };\n}\n\nasync function createWidget() {\n    let { data, fetchTime } = await getVaktija();\n    let vakti = data.vakat;\n    let times = [\"Zora\", \"Izlazak\", \"Podne\", \"Ikindija\", \"Akšam\", \"Jacija\"];\n    let nextVakat = getNextVakat(vakti, times);\n\n    let widget = new ListWidget();\n    widget.backgroundColor = new Color(\"#1e2227\");\n\n    let rowStack = widget.addStack();\n    rowStack.layoutHorizontally();\n    rowStack.setPadding(0, 0, 0, 0);\n\n    let leftColumn = rowStack.addStack();\n    leftColumn.layoutVertically();\n    leftColumn.size = new Size(130, 0);\n    leftColumn.centerAlignContent();\n\n    let rightColumn = rowStack.addStack();\n    rightColumn.layoutVertically();\n    rightColumn.size = new Size(100, 0);\n    rightColumn.centerAlignContent();\n\n    let header = leftColumn.addText(\"Vaktija.ba\");\n    header.textColor = new Color(\"#a59573\");\n    header.font = Font.boldSystemFont(16);\n    header.centerAlignText();\n    leftColumn.addSpacer(5);\n\n    let vakatNameText = leftColumn.addText(`${nextVakat.vakatName} za:`);\n    vakatNameText.textColor = Color.white();\n    vakatNameText.font = Font.systemFont(14);\n    vakatNameText.centerAlignText();\n\n    let countdownText = leftColumn.addText(`${nextVakat.countdown}`);\n    countdownText.textColor = new Color(\"#a59573\");\n    countdownText.font = Font.boldSystemFont(24);\n    countdownText.centerAlignText();\n\n    let cityName = leftColumn.addText(data.lokacija);\n    cityName.textColor = Color.white();\n    cityName.font = Font.systemFont(14);\n    cityName.centerAlignText();\n\n    leftColumn.addSpacer(8);\n\n    let hr = leftColumn.addText(\"───────\");\n    hr.textColor = new Color(\"#a59573\", 0.5);\n    hr.font = Font.systemFont(12);\n    hr.centerAlignText();\n\n    let lastFetchedText = leftColumn.addText(`🕒 ${fetchTime}`);\n    lastFetchedText.textColor = new Color(\"#a59573\");\n    lastFetchedText.font = Font.systemFont(12);\n    lastFetchedText.centerAlignText();\n\n    let headerText = rightColumn.addText(data.datum[0]);\n    headerText.textColor = new Color(\"#a59573\");\n    headerText.font = Font.systemFont(12);\n    headerText.centerAlignText();\n\n    let rightColumnWrapper = rightColumn.addStack();\n    rightColumnWrapper.layoutVertically();\n    rightColumnWrapper.centerAlignContent();\n\n    for (let i = 0; i < times.length; i++) {\n        let vakatText = rightColumnWrapper.addText(`${times[i]}: ${vakti[i]}`);\n        vakatText.textColor = Color.white();\n        vakatText.font = Font.mediumSystemFont(14);\n        vakatText.centerAlignText();\n    }\n\n    let copyrightText = rightColumn.addText(`Made with ❤️`);\n    copyrightText.textColor = new Color(\"#a59573\");\n    copyrightText.font = Font.systemFont(12);\n    copyrightText.centerAlignText();\n\n    widget.refreshAfterDate = new Date(Date.now() + 60 * 1000);\n\n    return widget;\n}\n\nlet widget = await createWidget();\nif (config.runsInWidget) {\n    Script.setWidget(widget);\n} else {\n    widget.presentMedium();\n}\n\nScript.complete();\n\n\/*\n * Made by MuxBH28\n * Email: sehicmuhammed7@proton.me\n * GitHub: github.com\/MuxBH28\n * \n * Data displayed is from Vaktija.ba API – huge thanks to them.\n * \n * For any issues, feel free to contact me.\n *\/",
  "share_sheet_inputs" : [

  ]
}